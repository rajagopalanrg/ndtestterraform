name: 'Terraform'

on:

  workflow_dispatch:
    inputs:
      subscriptionId:
        type: choice
        description: "Subscription ID"
        required: true
        options:
          - "first"
          - "second"
      candidateName:
        description: "Candidate Name"
        required: false
        default: "Rajagopalan"


jobs:
  Provisionig:
    name: 'Create Infrastructure'
    runs-on: ubuntu-latest
    environment: production
    env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_STORAGE_KEY: ${{ secrets.ARM_STORAGEKEY }}
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Set Environment variables
      run: |
          if [[ ${{ github.event.inputs.subscriptionId }} == first  ]]; then
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.FIRST_SUBSCRIPTION }}" >> $GITHUB_ENV
            echo "ARM_STORAGE_KEY=${{ secrets.ARM_STORAGEKEY }}" >> $GITHUB_ENV
          else
            echo "ARM_SUBSCRIPTION_ID=${{ secrets.SECOND_SUBSCRIPTION }}" >> $GITHUB_ENV
            echo "ARM_STORAGE_KEY=${{ secrets.SECOND_STORAGE_KEY }}" >> $GITHUB_ENV
          fi

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init -var-file=variables.tfvars --backend-config="key=${{ github.event.inputs.candidateName }}-state.tfstate"

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var-file=variables.tfvars